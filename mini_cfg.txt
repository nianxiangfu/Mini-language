PROGRAM -> program id PROBODY end
PROBODY -> FUNCDEF PROBODY | SM PROBODY | ϵ
COMSM -> begin EXTSM end
EXTSM -> SM EXTSM | ϵ
FUNCDEF -> func id ( SELARGS ) EXTSM end
RETURNSM -> return RETVAL ;
RETVAL -> EXP | ϵ
SELARGS -> ARGS | ϵ
ARGS -> id EXTARGS
EXTARGS -> , id EXTARGS | ϵ
SIGSM -> ASSM | IFSM | LOOPSM | CALLSM | CONSTSM | VARSM
ESM -> ;
SM -> SIGSM | COMSM | ESM | RETURNSM | BREAKSM | CONTINUESM
BREAKSM -> break ;
CONTINUESM -> continue ;
VARSM -> SIMVARSM | ARRVARSM
SIMVARSM -> var SIMVARAN EXTSIMVARAN ;
ARRVARSM -> array ARRVARAN EXTARRVARAN ;
EXTSIMVARAN -> , SIMVARAN EXTSIMVARAN | ϵ
EXTARRVARAN -> , ARRVARAN EXTARRVARAN | ϵ
SIMVARAN -> id SIMVARAN'
ARRVARAN -> id [ EXP ] ARRVARAN'
SIMVARAN' -> ϵ | = EXP
ARRVARAN' -> ϵ | = { EXP EXTEXP }
EXTEXP -> , EXP EXTEXP | ϵ
CONSTSM -> const CONAN EXTCONAN ;
CONAN -> id = EXP
EXTCONAN -> , CONAN EXTCONAN | ϵ
ASSM -> VARIABLE = EXP ;
IFSM -> if ( EXP ) SM ELSE
ELSE -> else SM |  ϵ
LOOPSM -> while ( EXP ) SM
CALLSM -> call id ( SELACARGS ) ;
SELACARGS -> ACARGS | ϵ
ACARGS -> ACARG EXTACARGS
ACARG -> EXP
EXTACARGS -> , ACARG EXTACARGS | ϵ
EXP -> SIMEXP EXTSIMEXP | call id ( SELACARGS )
EXTSIMEXP -> RELOP SIMEXP EXTSIMEXP | ϵ
RELOP -> == | < | > | <= | >= | !=
SIMEXP -> POSNEG ITEM EXTITEM
POSNEG -> + | - | ϵ
EXTITEM -> ADDOP ITEM EXTITEM | ϵ
ADDOP -> + | - | ||
ITEM -> FACTOR EXTFAC
EXTFAC -> MULOP FACTOR EXTFAC | ϵ
MULOP -> * | / | % | &&
FACTOR -> false | true | number | VARIABLE | ( EXP ) | ! FACTOR
VARIABLE -> id VARIABLE'
VARIABLE' -> ϵ | [ EXP ]